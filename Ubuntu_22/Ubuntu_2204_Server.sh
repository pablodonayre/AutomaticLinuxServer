# Tested on Ubuntu 22.04 (on Digital Ocean's VPS)

if [ ! -f .env ]; then
    echo "File .env not found!"
    exit 0
fi

# Avoid interactive installation (restart) Ubuntu 22.04
# https://stackoverflow.com/questions/73397110/how-to-stop-ubuntu-pop-up-daemons-using-outdated-libraries-when-using-apt-to-i
sed -i "/#\$nrconf{restart} = 'i';/s/.*/\$nrconf{restart} = 'a';/" /etc/needrestart/needrestart.conf;

export $(cat .env | grep -v "#" | xargs);

# Update and Upgrade the System
sudo apt-get update && sudo apt-get upgrade -y &&
sudo apt autoremove -y;

# NI= Install GIT
sudo apt-get install git -y;

# NI= Install UFW (Firewall)
sudo apt-get install ufw -y;
sudo ufw status &&
sudo ufw default deny incoming &&
sudo ufw default allow outgoing &&
#sudo ufw allow 'Nginx HTTP' &&
# www required to accept domains on port 80
sudo ufw allow www &&
# 443/tcp required to accept domains on port 443
sudo ufw allow 443/tcp &&
sudo ufw allow ssh &&
sudo ufw --force enable;

# Install Midnight Commander
sudo apt-get install mc -y;

# Generate ssh-keygen
# ssh-keygen -t rsa -b 4096 -C "root-public-key" -P "" -f "/root/.ssh/id_rsa" -q &&
# eval $(ssh-agent -s) &&
# ssh-add ~/.ssh/id_rsa &&
cat /root/.ssh/id_rsa.pub;


# Create One User called "Developer"
    new_user=developer;

    # Create new User and add it to Sudoers list
    adduser --disabled-password --gecos "" $new_user; 

    #Add a password
    echo $new_user:$ubuntu_password | chpasswd;
    echo $new_user'  ALL=(ALL:ALL) ALL' >> /etc/sudoers;

    # Generate ssh-keygen    
    ssh-keygen -t rsa -b 4096 -C "$new_user-public-key" -P "" -f "/home/$new_user/.ssh/id_rsa" -q
    cat /home/$new_user/.ssh/id_rsa.pub

    # -p = creates dirs in the path if does not exists). 
    sudo mkdir -p /home/$new_user/.ssh &&
    sudo chmod 700 /home/$new_user/.ssh &&
    touch authorized_keys;

    # To Copy the ssh authorized keys from root to the user (these keys were generated by digital ocean when creating the droplet)
    sudo cp /root/.ssh/authorized_keys /home/$new_user/.ssh/authorized_keys;
    #sudo touch /home/$new_user/.ssh/authorized_keys &&
    sudo chmod 644 /home/$new_user/.ssh/authorized_keys &&
    sudo chown $new_user:$new_user /home/$new_user/.ssh &&
    sudo chown $new_user:$new_user /home/$new_user/.ssh/authorized_keys &&    
    sudo chown $new_user:$new_user /home/$new_user/.ssh/id_rsa &&
    sudo chown $new_user:$new_user /home/$new_user/.ssh/id_rsa.pub;
    

# Install Fail2ban (Avoid Brute Force attack)
sudo apt-get install fail2ban -y;


# Install Docker
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04
    sudo apt install apt-transport-https ca-certificates curl software-properties-common &&
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
    apt-cache policy docker-ce &&
    sudo apt install -y docker-ce;


    # Config sudo docker (avoid use of sudo)
    sudo usermod -a -G docker $new_user;


# Install docker-compose
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-22-04

    # Dated Apr 26 2022: At the time of this writing, the most current stable version is 2.3.3.
    mkdir -p ~/.docker/cli-plugins/ &&
    curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose &&
    chmod +x ~/.docker/cli-plugins/docker-compose &&
    docker compose version;


# Automatic Commands to manage DOCKER
    # $new_user
        sudo mkdir /home/$new_user/Execute &&
        # This repository must be PUBLIC (to avoid the use of credentials)
        sudo git clone https://github.com/pablodonayre/Execute_Docker.git docker &&
        sudo mv docker /home/$new_user/Execute/ &&
        sudo chmod -R 755 /home/$new_user/Execute &&
        sudo chown -R $new_user:$new_user /home/$new_user/Execute &&
        echo alias dock-del-c=/home/$new_user/Execute/docker/docker-delete-containers.sh >> /home/$new_user/.bashrc &&
        echo alias dock-del-all=/home/$new_user/Execute/docker/docker-delete-all.sh >> /home/$new_user/.bashrc &&
        echo alias dock-del-img=/home/$new_user/Execute/docker/docker-delete-images.sh >> /home/$new_user/.bashrc &&
        echo alias dock-del-vol=/home/$new_user/Execute/docker/docker-delete-dangling_volumes.sh >> /home/$new_user/.bashrc;
